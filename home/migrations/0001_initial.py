# Generated by Django 4.0 on 2021-12-28 00:57

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('ap_paterno', models.CharField(blank=True, max_length=250, null=True)),
                ('ap_materno', models.CharField(blank=True, max_length=250, null=True)),
                ('curp', models.CharField(blank=True, max_length=18, null=True)),
                ('emails', models.CharField(blank=True, max_length=250, null=True)),
                ('celulares', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('telefonos', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('genero', models.SmallIntegerField(blank=True, choices=[(1, 'Masculino'), (0, 'Femenino')], default=1, null=True)),
                ('session', models.CharField(blank=True, max_length=250, null=True)),
                ('estatus', models.SmallIntegerField(blank=True, choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, null=True)),
                ('uploadedFile', models.ImageField(blank=True, default='', null=True, upload_to='profile/')),
                ('dateTimeOfUpload', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'auth_user',
                'ordering': ['pk'],
                'permissions': (('Puede Crear', 'Puede Editar'),),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empresa', models.CharField(max_length=250, null=True)),
                ('rfc', models.CharField(max_length=13, null=True)),
                ('domicilio_fiscal', models.CharField(max_length=250, null=True)),
                ('representante_legal', models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dependencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependencia', models.CharField(max_length=250)),
                ('abreviatura', models.CharField(max_length=25)),
                ('modi_el', models.DateField(blank=True, null=True, verbose_name='died')),
                ('modi_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='home.usuario')),
                ('titular', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titulares', to='home.usuario')),
            ],
            options={
                'ordering': ['dependencia'],
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='empresa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.empresa'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
